// align
.align-baseline {
    vertical-align: baseline !important;
} // Browser default
.align-top {
    vertical-align: top !important;
}

.align-middle {
    vertical-align: middle !important;
}

.align-bottom {
    vertical-align: bottom !important;
}

.align-text-bottom {
    vertical-align: text-bottom !important;
}

.align-text-top {
    vertical-align: text-top !important;
}

//border
.border {
    border: $border-width solid $border-color !important;
}

.border-top {
    border-top: $border-width solid $border-color !important;
}

.border-right {
    border-right: $border-width solid $border-color !important;
}

.border-bottom {
    border-bottom: $border-width solid $border-color !important;
}

.border-left {
    border-left: $border-width solid $border-color !important;
}

.border-0 {
    border: 0 !important;
}

.border-top-0 {
    border-top: 0 !important;
}

.border-right-0 {
    border-right: 0 !important;
}

.border-bottom-0 {
    border-bottom: 0 !important;
}

.border-left-0 {
    border-left: 0 !important;
}

.rounded {
    border-radius: $border-radius !important;
}

.rounded-top {
    border-top-left-radius: $border-radius !important;
    border-top-right-radius: $border-radius !important;
}

.rounded-right {
    border-top-right-radius: $border-radius !important;
    border-bottom-right-radius: $border-radius !important;
}

.rounded-bottom {
    border-bottom-right-radius: $border-radius !important;
    border-bottom-left-radius: $border-radius !important;
}

.rounded-left {
    border-top-left-radius: $border-radius !important;
    border-bottom-left-radius: $border-radius !important;
}

.rounded-circle {
    border-radius: 50px !important;
}

.rounded-0 {
    border-radius: 0 !important;
}

//clearfix
.clearfix {
    @include clearfix;
}

//display
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .d#{$infix}-none {
            display: none !important;
        }

        .d#{$infix}-inline {
            display: inline !important;
        }

        .d#{$infix}-inline-block {
            display: inline-block !important;
        }

        .d#{$infix}-block {
            display: block !important;
        }

        .d#{$infix}-table {
            display: table !important;
        }

        .d#{$infix}-table-row {
            display: table-row !important;
        }

        .d#{$infix}-table-cell {
            display: table-cell !important;
        }

        .d#{$infix}-flex {
            display: flex !important;
        }

        .d#{$infix}-inline-flex {
            display: inline-flex !important;
        }
    }
}

@media print {
    .d-print-none {
        display: none !important;
    }

    .d-print-inline {
        display: inline !important;
    }

    .d-print-inline-block {
        display: inline-block !important;
    }

    .d-print-block {
        display: block !important;
    }

    .d-print-table {
        display: table !important;
    }

    .d-print-table-row {
        display: table-row !important;
    }

    .d-print-table-cell {
        display: table-cell !important;
    }

    .d-print-flex {
        display: flex !important;
    }

    .d-print-inline-flex {
        display: inline-flex !important;
    }
}

// embed
.embed-responsive {
    position: relative;
    display: block;
    width: 100%;
    padding: 0;
    overflow: hidden;

    &::before {
        display: block;
        content: "";
    }

    .embed-responsive-item,
    iframe,
    embed,
    object,
    video {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border: 0;
    }
}

.embed-responsive-21by9 {
    &::before {
        padding-top: percentage(9 / 21);
    }
}

.embed-responsive-16by9 {
    &::before {
        padding-top: percentage(9 / 16);
    }
}

.embed-responsive-4by3 {
    &::before {
        padding-top: percentage(3 / 4);
    }
}

.embed-responsive-1by1 {
    &::before {
        padding-top: percentage(1 / 1);
    }
}

// flex
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .flex#{$infix}-first {
            order: -1;
        }

        .flex#{$infix}-last {
            order: 1;
        }

        .flex#{$infix}-unordered {
            order: 0;
        }

        .flex#{$infix}-row {
            flex-direction: row !important;
        }

        .flex#{$infix}-column {
            flex-direction: column !important;
        }

        .flex#{$infix}-row-reverse {
            flex-direction: row-reverse !important;
        }

        .flex#{$infix}-column-reverse {
            flex-direction: column-reverse !important;
        }

        .flex#{$infix}-wrap {
            flex-wrap: wrap !important;
        }

        .flex#{$infix}-nowrap {
            flex-wrap: nowrap !important;
        }

        .flex#{$infix}-wrap-reverse {
            flex-wrap: wrap-reverse !important;
        }

        .justify-content#{$infix}-start {
            justify-content: flex-start !important;
        }

        .justify-content#{$infix}-end {
            justify-content: flex-end !important;
        }

        .justify-content#{$infix}-center {
            justify-content: center !important;
        }

        .justify-content#{$infix}-between {
            justify-content: space-between !important;
        }

        .justify-content#{$infix}-around {
            justify-content: space-around !important;
        }

        .align-items#{$infix}-start {
            align-items: flex-start !important;
        }

        .align-items#{$infix}-end {
            align-items: flex-end !important;
        }

        .align-items#{$infix}-center {
            align-items: center !important;
        }

        .align-items#{$infix}-baseline {
            align-items: baseline !important;
        }

        .align-items#{$infix}-stretch {
            align-items: stretch !important;
        }

        .align-content#{$infix}-start {
            align-content: flex-start !important;
        }

        .align-content#{$infix}-end {
            align-content: flex-end !important;
        }

        .align-content#{$infix}-center {
            align-content: center !important;
        }

        .align-content#{$infix}-between {
            align-content: space-between !important;
        }

        .align-content#{$infix}-around {
            align-content: space-around !important;
        }

        .align-content#{$infix}-stretch {
            align-content: stretch !important;
        }

        .align-self#{$infix}-auto {
            align-self: auto !important;
        }

        .align-self#{$infix}-start {
            align-self: flex-start !important;
        }

        .align-self#{$infix}-end {
            align-self: flex-end !important;
        }

        .align-self#{$infix}-center {
            align-self: center !important;
        }

        .align-self#{$infix}-baseline {
            align-self: baseline !important;
        }

        .align-self#{$infix}-stretch {
            align-self: stretch !important;
        }

        .flex#{$infix}-fill {
            flex: 1 1 auto !important;
        }

        .flex#{$infix}-grow-0 {
            flex-grow: 0 !important;
        }

        .flex#{$infix}-grow-1 {
            flex-grow: 1 !important;
        }

        .flex#{$infix}-shrink-0 {
            flex-shrink: 0 !important;
        }

        .flex#{$infix}-shrink-1 {
            flex-shrink: 1 !important;
        }
    }
}

//float
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .float#{$infix}-left {
            float: left !important;
        }

        .float#{$infix}-right {
            float: right !important;
        }

        .float#{$infix}-none {
            float: none !important;
        }
    }
}

//position
$positions: static, relative, absolute, fixed, sticky;

@each $position in $positions {
    .position-#{$position} {
        position: $position !important;
    }
}

.fixed-top {
    position: fixed;
    top: 0;
    right: 0;
    left: 0;
    z-index: $zindex-fixed;
}

.fixed-bottom {
    position: fixed;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: $zindex-fixed;
}

.sticky-top {
    @supports (position: sticky) {
        position: sticky;
        top: 0;
        z-index: $zindex-sticky;
    }
}

//sizing
.h-25 {
    height: 25% !important;
}

.h-50 {
    height: 50% !important;
}

.h-75 {
    height: 75% !important;
}

.h-100 {
    height: 100% !important;
}

.h-auto {
    height: auto !important;
}

.w-10 {
    width: 10% !important;
}

.w-15 {
    width: 15% !important;
}

.w-20 {
    width: 20% !important;
}

.w-25 {
    width: 25% !important;
}

.w-30 {
    width: 30% !important;
}

.w-35 {
    width: 35% !important;
}

.w-40 {
    width: 40% !important;
}

.w-45 {
    width: 45% !important;
}

.w-50 {
    width: 50% !important;
}

.w-55 {
    width: 55% !important;
}

.w-60 {
    width: 60% !important;
}

.w-65 {
    width: 65% !important;
}

.w-70 {
    width: 70% !important;
}

.w-75 {
    width: 75% !important;
}

.w-80 {
    width: 80% !important;
}

.w-85 {
    width: 85% !important;
}

.w-90 {
    width: 90% !important;
}

.w-95 {
    width: 95% !important;
}

.w-100 {
    width: 100% !important;
}

.w-auto {
    width: auto !important;
}

.mw-100 {
    max-width: 100% !important;
}

.mh-100 {
    max-height: 100% !important;
}

// Margin and Padding
@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        @each $prop, $abbrev in (margin: m, padding: p) {
            @each $size, $length in $spacers {
                .#{$abbrev}#{$infix}-#{$size} {
                    #{$prop}: $length !important;
                }

                .#{$abbrev}t#{$infix}-#{$size},
                .#{$abbrev}y#{$infix}-#{$size} {
                    #{$prop}-top: $length !important;
                }

                .#{$abbrev}r#{$infix}-#{$size},
                .#{$abbrev}x#{$infix}-#{$size} {
                    #{$prop}-right: $length !important;
                }

                .#{$abbrev}b#{$infix}-#{$size},
                .#{$abbrev}y#{$infix}-#{$size} {
                    #{$prop}-bottom: $length !important;
                }

                .#{$abbrev}l#{$infix}-#{$size},
                .#{$abbrev}x#{$infix}-#{$size} {
                    #{$prop}-left: $length !important;
                }
            }
        }

        // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)
        @each $size, $length in $spacers {
            @if $size != 0 {
            .m#{$infix}-n#{$size} { margin: -$length !important; }
            .mt#{$infix}-n#{$size},
            .my#{$infix}-n#{$size} {
                margin-top: -$length !important;
            }
            .mr#{$infix}-n#{$size},
            .mx#{$infix}-n#{$size} {
                margin-right: -$length !important;
            }
            .mb#{$infix}-n#{$size},
            .my#{$infix}-n#{$size} {
                margin-bottom: -$length !important;
            }
            .ml#{$infix}-n#{$size},
            .mx#{$infix}-n#{$size} {
                margin-left: -$length !important;
            }
            }
        }

        // Some special margin utils
        .m#{$infix}-auto {
            margin: auto !important;
        }

        .mt#{$infix}-auto,
        .my#{$infix}-auto {
            margin-top: auto !important;
        }

        .mr#{$infix}-auto,
        .mx#{$infix}-auto {
            margin-right: auto !important;
        }

        .mb#{$infix}-auto,
        .my#{$infix}-auto {
            margin-bottom: auto !important;
        }

        .ml#{$infix}-auto,
        .mx#{$infix}-auto {
            margin-left: auto !important;
        }
    }
}

//text
.text-justify {
    text-align: justify !important;
}

.text-nowrap {
    white-space: nowrap !important;
}

.text-wrap {
    white-space: normal !important;
}

.text-truncate {
    @include text-truncate;
}

.text-underline {
    text-decoration: underline;
}

.text-hover-underline:hover {
    text-decoration: underline;
}

@each $breakpoint in map-keys($grid-breakpoints) {
    @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        .text#{$infix}-left {
            text-align: left !important;
        }

        .text#{$infix}-right {
            text-align: right !important;
        }

        .text#{$infix}-center {
            text-align: center !important;
        }
    }
}

.text-lowercase {
    text-transform: lowercase !important;
}

.text-uppercase {
    text-transform: uppercase !important;
}

.text-capitalize {
    text-transform: capitalize !important;
}

.text-link {
    &:hover {
        text-decoration: underline;
    }
}

.font-weight-light {
    font-weight: $font-weight-light !important;
}

.font-weight-normal {
    font-weight: $font-weight-normal !important;
}

.font-weight-semibold {
    font-weight: $font-weight-semibold !important;
}

.font-weight-bold {
    font-weight: $font-weight-bold !important;
}

.font-weight-black {
    font-weight: 800 !important;
}

.font-italic {
    font-style: italic !important;
}

.text-white {
    color: $white !important;
}

.text-black {
    color: $black !important;
}

.bg-black-8 {
    background: $black-8 !important;
}

.text-black-7 {
    color: $black-7 !important;
}

.text-black-6 {
    color: $black-6 !important;
}

.text-black-5 {
    color: $black-5 !important;
}

.text-black-4 {
    color: $black-4 !important;
}

.text-black-3 {
    color: $black-3 !important;
}

.text-black-2 {
    color: $black-2 !important;
}

.text-black-1 {
    color: $black-1 !important;
}

// Please use text-black-7 & text-black-6 & text-black-5 & text-black-4 & text-black-3 & text-black-2 & text-black-1
// #Deprecated
.text-darkest {
    color: $black-7 !important;
}

.text-darker {
    color: $black-6 !important;
}

.text-dark {
    color: $black-5 !important;
}

.text-gray {
    color: $black-4 !important;
}

.text-gray-light {
    color: $black-3 !important;
}

.text-gray-lighter {
    color: $black-3 !important;
}
// #Deprecated - end

// Please use text-body
// #Deprecated
.text-body-color {
    color: $body-color !important;
}

.text-primary {
    color: $brand-primary !important;
}

.text-theme {
    color: $brand-theme !important;
}

.text-info {
    color: $brand-info !important;
}

.text-success {
    color: $brand-success !important;//
}

.text-warning {
    color: $brand-alert !important;
}

.text-profit {
    color: $brand-profit !important;
}

.text-loss {
    color: $brand-loss !important;
}

.text-danger {
    color: $brand-alert !important;
}

.text-body {
    color: $body-color !important;
}

.text-muted {
    color: $text-muted !important;
}

.text-accent-1 {
    color: $brand-accent-1 !important;
}
.text-accent-2 {
    color: $brand-accent-2 !important;
}

.text-fund {
    color: $brand-fund !important
}
.text-stock {
    color: $brand-stock !important
}
.text-bond {
    color: $brand-bond !important
}
.text-etf {
    color: $brand-etf !important
}
.text-map {
    color: $brand-map !important
}
.text-insurance {
    color: $brand-insurance !important
}
.text-ndpms {
    color: $brand-ndpms !important
}
.text-dpms-cash {
    color: $brand-dpms-cash !important
}
.text-research {
    color: $brand-research !important
}

// Please use text-accent-1 & text-accent-2
// #Deprecated
.text-accent1 {
    color: $brand-accent-1 !important;
}
.text-accent2 {
    color: $brand-accent-2 !important;
}

//background
.background-primary {
    background-color: $brand-primary;
}


//visibility
.visible {
    visibility: visible;
}

.invisible {
    visibility: hidden;
}

//line height
.line-height-base {
    line-height: $line-height-base;
}

//media
.media {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-align: start;
    align-items: flex-start;
}

//shadow
.shadow-none {
    box-shadow: none !important;
}

.shadow-sm {
    box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
}

.shadow {
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;
}

.shadow-lg {
    box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175) !important;
}

//opacity
.opacity-0 {
    opacity: 0;
}

.opacity-0-1 {
    opacity: 0.1;
}

.opacity-0-2 {
    opacity: 0.2;
}

.opacity-0-3 {
    opacity: 0.3;
}

.opacity-0-4 {
    opacity: 0.4;
}

.opacity-0-5 {
    opacity: 0.5;
}

.opacity-0-6 {
    opacity: 0.6;
}

.opacity-0-7 {
    opacity: 0.7;
}

.opacity-0-8 {
    opacity: 0.8;
}

.opacity-0-9 {
    opacity: 0.9;
}

.opacity-1 {
    opacity: 1;
}

//section

.section-1 {
    padding: 100px 0px;
}

.section-2 {
    padding: 80px 0px;
}

.section-3 {
    padding: 60px 0px;
}

.section-4 {
    padding: 40px 0px;
}

.pointer {
    cursor: pointer !important;
}

.not-allow {
    cursor: not-allowed !important;
}

.pointer-events-none {
    pointer-events: none;
}

.img-fluid {
    max-width: 100%;
    height: auto;
}

/* Overflow */
.overflow-visible {
    overflow: visible;
}

.overflow-y-visible {
    overflow-y: visible;
}

.overflow-hidden {
    overflow: hidden;
}

.overflow-y-hidden {
    overflow-y: hidden;
}

.overflow-x-hidden {
    overflow-x: hidden;
}

.overflow-auto {
    overflow: auto;
}

.overflow-y-auto {
    overflow-y: auto;
}

.overflow-x-auto {
    overflow-x: auto;
}